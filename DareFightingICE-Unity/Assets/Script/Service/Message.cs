// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: message.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DareFightingICE.Grpc.Proto {

  /// <summary>Holder for reflection information generated from message.proto</summary>
  public static partial class MessageReflection {

    #region Descriptor
    /// <summary>File descriptor for message.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1tZXNzYWdlLnByb3RvEgdzZXJ2aWNlGgplbnVtLnByb3RvIkcKC0dycGNI",
            "aXRBcmVhEgwKBGxlZnQYASABKAUSDQoFcmlnaHQYAiABKAUSCwoDdG9wGAMg",
            "ASgFEg4KBmJvdHRvbRgEIAEoBSKcBAoOR3JwY0F0dGFja0RhdGESLgoQc2V0",
            "dGluZ19oaXRfYXJlYRgBIAEoCzIULnNlcnZpY2UuR3JwY0hpdEFyZWESFwoP",
            "c2V0dGluZ19zcGVlZF94GAIgASgFEhcKD3NldHRpbmdfc3BlZWRfeRgDIAEo",
            "BRIuChBjdXJyZW50X2hpdF9hcmVhGAQgASgLMhQuc2VydmljZS5HcnBjSGl0",
            "QXJlYRIVCg1jdXJyZW50X2ZyYW1lGAUgASgFEhUKDXBsYXllcl9udW1iZXIY",
            "BiABKAgSDwoHc3BlZWRfeBgHIAEoBRIPCgdzcGVlZF95GAggASgFEhAKCHN0",
            "YXJ0X3VwGAkgASgFEg4KBmFjdGl2ZRgKIAEoBRISCgpoaXRfZGFtYWdlGAsg",
            "ASgFEhQKDGd1YXJkX2RhbWFnZRgMIAEoBRIYChBzdGFydF9hZGRfZW5lcmd5",
            "GA0gASgFEhYKDmhpdF9hZGRfZW5lcmd5GA4gASgFEhgKEGd1YXJkX2FkZF9l",
            "bmVyZ3kYDyABKAUSEwoLZ2l2ZV9lbmVyZ3kYECABKAUSEAoIaW1wYWN0X3gY",
            "ESABKAUSEAoIaW1wYWN0X3kYEiABKAUSGAoQZ2l2ZV9ndWFyZF9yZWNvdhgT",
            "IAEoBRITCgthdHRhY2tfdHlwZRgUIAEoBRIRCglkb3duX3Byb3AYFSABKAgS",
            "FQoNaXNfcHJvamVjdGlsZRgWIAEoCCLxAwoRR3JwY0NoYXJhY3RlckRhdGES",
            "FQoNcGxheWVyX251bWJlchgBIAEoCBIKCgJocBgCIAEoBRIOCgZlbmVyZ3kY",
            "AyABKAUSCQoBeBgEIAEoBRIJCgF5GAUgASgFEgwKBGxlZnQYBiABKAUSDQoF",
            "cmlnaHQYByABKAUSCwoDdG9wGAggASgFEg4KBmJvdHRvbRgJIAEoBRIPCgdz",
            "cGVlZF94GAogASgFEg8KB3NwZWVkX3kYCyABKAUSIQoFc3RhdGUYDCABKA4y",
            "Ei5zZXJ2aWNlLkdycGNTdGF0ZRIjCgZhY3Rpb24YDSABKA4yEy5zZXJ2aWNl",
            "LkdycGNBY3Rpb24SDQoFZnJvbnQYDiABKAgSDwoHY29udHJvbBgPIAEoCBIs",
            "CgthdHRhY2tfZGF0YRgQIAEoCzIXLnNlcnZpY2UuR3JwY0F0dGFja0RhdGES",
            "FwoPcmVtYWluaW5nX2ZyYW1lGBEgASgFEhMKC2hpdF9jb25maXJtGBIgASgI",
            "EhYKDmdyYXBoaWNfc2l6ZV94GBMgASgFEhYKDmdyYXBoaWNfc2l6ZV95GBQg",
            "ASgFEhgKEGdyYXBoaWNfYWRqdXN0X3gYFSABKAUSEQoJaGl0X2NvdW50GBYg",
            "ASgFEhYKDmxhc3RfaGl0X2ZyYW1lGBcgASgFIs0BCg1HcnBjRnJhbWVEYXRh",
            "EjIKDmNoYXJhY3Rlcl9kYXRhGAEgAygLMhouc2VydmljZS5HcnBjQ2hhcmFj",
            "dGVyRGF0YRIcChRjdXJyZW50X2ZyYW1lX251bWJlchgCIAEoBRIVCg1jdXJy",
            "ZW50X3JvdW5kGAMgASgFEjAKD3Byb2plY3RpbGVfZGF0YRgEIAMoCzIXLnNl",
            "cnZpY2UuR3JwY0F0dGFja0RhdGESEgoKZW1wdHlfZmxhZxgFIAEoCBINCgVm",
            "cm9udBgGIAMoCCJKCgtHcnBjRmZ0RGF0YRIaChJyZWFsX2RhdGFfYXNfYnl0",
            "ZXMYASABKAwSHwoXaW1hZ2luYXJ5X2RhdGFfYXNfYnl0ZXMYAiABKAwiJwoO",
            "R3JwY1NjcmVlbkRhdGESFQoNZGlzcGxheV9ieXRlcxgBIAEoDCJ1Cg1HcnBj",
            "QXVkaW9EYXRhEhkKEXJhd19kYXRhX2FzX2J5dGVzGAEgASgMEiYKCGZmdF9k",
            "YXRhGAIgAygLMhQuc2VydmljZS5HcnBjRmZ0RGF0YRIhChlzcGVjdHJvZ3Jh",
            "bV9kYXRhX2FzX2J5dGVzGAMgASgMImAKDEdycGNHYW1lRGF0YRIPCgdtYXhf",
            "aHBzGAEgAygFEhQKDG1heF9lbmVyZ2llcxgCIAMoBRIXCg9jaGFyYWN0ZXJf",
            "bmFtZXMYAyADKAkSEAoIYWlfbmFtZXMYBCADKAkiVgoPR3JwY1JvdW5kUmVz",
            "dWx0EhUKDWN1cnJlbnRfcm91bmQYASABKAUSFQoNcmVtYWluaW5nX2hwcxgC",
            "IAMoBRIVCg1lbGFwc2VkX2ZyYW1lGAMgASgFIlYKB0dycGNLZXkSCQoBQRgB",
            "IAEoCBIJCgFCGAIgASgIEgkKAUMYAyABKAgSCQoBVRgEIAEoCBIJCgFSGAUg",
            "ASgIEgkKAUQYBiABKAgSCQoBTBgHIAEoCEIdqgIaRGFyZUZpZ2h0aW5nSUNF",
            "LkdycGMuUHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::DareFightingICE.Grpc.Proto.EnumReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DareFightingICE.Grpc.Proto.GrpcHitArea), global::DareFightingICE.Grpc.Proto.GrpcHitArea.Parser, new[]{ "Left", "Right", "Top", "Bottom" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DareFightingICE.Grpc.Proto.GrpcAttackData), global::DareFightingICE.Grpc.Proto.GrpcAttackData.Parser, new[]{ "SettingHitArea", "SettingSpeedX", "SettingSpeedY", "CurrentHitArea", "CurrentFrame", "PlayerNumber", "SpeedX", "SpeedY", "StartUp", "Active", "HitDamage", "GuardDamage", "StartAddEnergy", "HitAddEnergy", "GuardAddEnergy", "GiveEnergy", "ImpactX", "ImpactY", "GiveGuardRecov", "AttackType", "DownProp", "IsProjectile" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DareFightingICE.Grpc.Proto.GrpcCharacterData), global::DareFightingICE.Grpc.Proto.GrpcCharacterData.Parser, new[]{ "PlayerNumber", "Hp", "Energy", "X", "Y", "Left", "Right", "Top", "Bottom", "SpeedX", "SpeedY", "State", "Action", "Front", "Control", "AttackData", "RemainingFrame", "HitConfirm", "GraphicSizeX", "GraphicSizeY", "GraphicAdjustX", "HitCount", "LastHitFrame" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DareFightingICE.Grpc.Proto.GrpcFrameData), global::DareFightingICE.Grpc.Proto.GrpcFrameData.Parser, new[]{ "CharacterData", "CurrentFrameNumber", "CurrentRound", "ProjectileData", "EmptyFlag", "Front" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DareFightingICE.Grpc.Proto.GrpcFftData), global::DareFightingICE.Grpc.Proto.GrpcFftData.Parser, new[]{ "RealDataAsBytes", "ImaginaryDataAsBytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DareFightingICE.Grpc.Proto.GrpcScreenData), global::DareFightingICE.Grpc.Proto.GrpcScreenData.Parser, new[]{ "DisplayBytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DareFightingICE.Grpc.Proto.GrpcAudioData), global::DareFightingICE.Grpc.Proto.GrpcAudioData.Parser, new[]{ "RawDataAsBytes", "FftData", "SpectrogramDataAsBytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DareFightingICE.Grpc.Proto.GrpcGameData), global::DareFightingICE.Grpc.Proto.GrpcGameData.Parser, new[]{ "MaxHps", "MaxEnergies", "CharacterNames", "AiNames" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DareFightingICE.Grpc.Proto.GrpcRoundResult), global::DareFightingICE.Grpc.Proto.GrpcRoundResult.Parser, new[]{ "CurrentRound", "RemainingHps", "ElapsedFrame" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DareFightingICE.Grpc.Proto.GrpcKey), global::DareFightingICE.Grpc.Proto.GrpcKey.Parser, new[]{ "A", "B", "C", "U", "R", "D", "L" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GrpcHitArea : pb::IMessage<GrpcHitArea>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GrpcHitArea> _parser = new pb::MessageParser<GrpcHitArea>(() => new GrpcHitArea());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GrpcHitArea> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DareFightingICE.Grpc.Proto.MessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcHitArea() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcHitArea(GrpcHitArea other) : this() {
      left_ = other.left_;
      right_ = other.right_;
      top_ = other.top_;
      bottom_ = other.bottom_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcHitArea Clone() {
      return new GrpcHitArea(this);
    }

    /// <summary>Field number for the "left" field.</summary>
    public const int LeftFieldNumber = 1;
    private int left_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Left {
      get { return left_; }
      set {
        left_ = value;
      }
    }

    /// <summary>Field number for the "right" field.</summary>
    public const int RightFieldNumber = 2;
    private int right_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Right {
      get { return right_; }
      set {
        right_ = value;
      }
    }

    /// <summary>Field number for the "top" field.</summary>
    public const int TopFieldNumber = 3;
    private int top_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Top {
      get { return top_; }
      set {
        top_ = value;
      }
    }

    /// <summary>Field number for the "bottom" field.</summary>
    public const int BottomFieldNumber = 4;
    private int bottom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Bottom {
      get { return bottom_; }
      set {
        bottom_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GrpcHitArea);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GrpcHitArea other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Left != other.Left) return false;
      if (Right != other.Right) return false;
      if (Top != other.Top) return false;
      if (Bottom != other.Bottom) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Left != 0) hash ^= Left.GetHashCode();
      if (Right != 0) hash ^= Right.GetHashCode();
      if (Top != 0) hash ^= Top.GetHashCode();
      if (Bottom != 0) hash ^= Bottom.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Left != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Left);
      }
      if (Right != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Right);
      }
      if (Top != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Top);
      }
      if (Bottom != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Bottom);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Left != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Left);
      }
      if (Right != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Right);
      }
      if (Top != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Top);
      }
      if (Bottom != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Bottom);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Left != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Left);
      }
      if (Right != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Right);
      }
      if (Top != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Top);
      }
      if (Bottom != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Bottom);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GrpcHitArea other) {
      if (other == null) {
        return;
      }
      if (other.Left != 0) {
        Left = other.Left;
      }
      if (other.Right != 0) {
        Right = other.Right;
      }
      if (other.Top != 0) {
        Top = other.Top;
      }
      if (other.Bottom != 0) {
        Bottom = other.Bottom;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Left = input.ReadInt32();
            break;
          }
          case 16: {
            Right = input.ReadInt32();
            break;
          }
          case 24: {
            Top = input.ReadInt32();
            break;
          }
          case 32: {
            Bottom = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Left = input.ReadInt32();
            break;
          }
          case 16: {
            Right = input.ReadInt32();
            break;
          }
          case 24: {
            Top = input.ReadInt32();
            break;
          }
          case 32: {
            Bottom = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GrpcAttackData : pb::IMessage<GrpcAttackData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GrpcAttackData> _parser = new pb::MessageParser<GrpcAttackData>(() => new GrpcAttackData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GrpcAttackData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DareFightingICE.Grpc.Proto.MessageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcAttackData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcAttackData(GrpcAttackData other) : this() {
      settingHitArea_ = other.settingHitArea_ != null ? other.settingHitArea_.Clone() : null;
      settingSpeedX_ = other.settingSpeedX_;
      settingSpeedY_ = other.settingSpeedY_;
      currentHitArea_ = other.currentHitArea_ != null ? other.currentHitArea_.Clone() : null;
      currentFrame_ = other.currentFrame_;
      playerNumber_ = other.playerNumber_;
      speedX_ = other.speedX_;
      speedY_ = other.speedY_;
      startUp_ = other.startUp_;
      active_ = other.active_;
      hitDamage_ = other.hitDamage_;
      guardDamage_ = other.guardDamage_;
      startAddEnergy_ = other.startAddEnergy_;
      hitAddEnergy_ = other.hitAddEnergy_;
      guardAddEnergy_ = other.guardAddEnergy_;
      giveEnergy_ = other.giveEnergy_;
      impactX_ = other.impactX_;
      impactY_ = other.impactY_;
      giveGuardRecov_ = other.giveGuardRecov_;
      attackType_ = other.attackType_;
      downProp_ = other.downProp_;
      isProjectile_ = other.isProjectile_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcAttackData Clone() {
      return new GrpcAttackData(this);
    }

    /// <summary>Field number for the "setting_hit_area" field.</summary>
    public const int SettingHitAreaFieldNumber = 1;
    private global::DareFightingICE.Grpc.Proto.GrpcHitArea settingHitArea_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DareFightingICE.Grpc.Proto.GrpcHitArea SettingHitArea {
      get { return settingHitArea_; }
      set {
        settingHitArea_ = value;
      }
    }

    /// <summary>Field number for the "setting_speed_x" field.</summary>
    public const int SettingSpeedXFieldNumber = 2;
    private int settingSpeedX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SettingSpeedX {
      get { return settingSpeedX_; }
      set {
        settingSpeedX_ = value;
      }
    }

    /// <summary>Field number for the "setting_speed_y" field.</summary>
    public const int SettingSpeedYFieldNumber = 3;
    private int settingSpeedY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SettingSpeedY {
      get { return settingSpeedY_; }
      set {
        settingSpeedY_ = value;
      }
    }

    /// <summary>Field number for the "current_hit_area" field.</summary>
    public const int CurrentHitAreaFieldNumber = 4;
    private global::DareFightingICE.Grpc.Proto.GrpcHitArea currentHitArea_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DareFightingICE.Grpc.Proto.GrpcHitArea CurrentHitArea {
      get { return currentHitArea_; }
      set {
        currentHitArea_ = value;
      }
    }

    /// <summary>Field number for the "current_frame" field.</summary>
    public const int CurrentFrameFieldNumber = 5;
    private int currentFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrentFrame {
      get { return currentFrame_; }
      set {
        currentFrame_ = value;
      }
    }

    /// <summary>Field number for the "player_number" field.</summary>
    public const int PlayerNumberFieldNumber = 6;
    private bool playerNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PlayerNumber {
      get { return playerNumber_; }
      set {
        playerNumber_ = value;
      }
    }

    /// <summary>Field number for the "speed_x" field.</summary>
    public const int SpeedXFieldNumber = 7;
    private int speedX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpeedX {
      get { return speedX_; }
      set {
        speedX_ = value;
      }
    }

    /// <summary>Field number for the "speed_y" field.</summary>
    public const int SpeedYFieldNumber = 8;
    private int speedY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpeedY {
      get { return speedY_; }
      set {
        speedY_ = value;
      }
    }

    /// <summary>Field number for the "start_up" field.</summary>
    public const int StartUpFieldNumber = 9;
    private int startUp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartUp {
      get { return startUp_; }
      set {
        startUp_ = value;
      }
    }

    /// <summary>Field number for the "active" field.</summary>
    public const int ActiveFieldNumber = 10;
    private int active_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Active {
      get { return active_; }
      set {
        active_ = value;
      }
    }

    /// <summary>Field number for the "hit_damage" field.</summary>
    public const int HitDamageFieldNumber = 11;
    private int hitDamage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HitDamage {
      get { return hitDamage_; }
      set {
        hitDamage_ = value;
      }
    }

    /// <summary>Field number for the "guard_damage" field.</summary>
    public const int GuardDamageFieldNumber = 12;
    private int guardDamage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GuardDamage {
      get { return guardDamage_; }
      set {
        guardDamage_ = value;
      }
    }

    /// <summary>Field number for the "start_add_energy" field.</summary>
    public const int StartAddEnergyFieldNumber = 13;
    private int startAddEnergy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartAddEnergy {
      get { return startAddEnergy_; }
      set {
        startAddEnergy_ = value;
      }
    }

    /// <summary>Field number for the "hit_add_energy" field.</summary>
    public const int HitAddEnergyFieldNumber = 14;
    private int hitAddEnergy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HitAddEnergy {
      get { return hitAddEnergy_; }
      set {
        hitAddEnergy_ = value;
      }
    }

    /// <summary>Field number for the "guard_add_energy" field.</summary>
    public const int GuardAddEnergyFieldNumber = 15;
    private int guardAddEnergy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GuardAddEnergy {
      get { return guardAddEnergy_; }
      set {
        guardAddEnergy_ = value;
      }
    }

    /// <summary>Field number for the "give_energy" field.</summary>
    public const int GiveEnergyFieldNumber = 16;
    private int giveEnergy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GiveEnergy {
      get { return giveEnergy_; }
      set {
        giveEnergy_ = value;
      }
    }

    /// <summary>Field number for the "impact_x" field.</summary>
    public const int ImpactXFieldNumber = 17;
    private int impactX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImpactX {
      get { return impactX_; }
      set {
        impactX_ = value;
      }
    }

    /// <summary>Field number for the "impact_y" field.</summary>
    public const int ImpactYFieldNumber = 18;
    private int impactY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ImpactY {
      get { return impactY_; }
      set {
        impactY_ = value;
      }
    }

    /// <summary>Field number for the "give_guard_recov" field.</summary>
    public const int GiveGuardRecovFieldNumber = 19;
    private int giveGuardRecov_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GiveGuardRecov {
      get { return giveGuardRecov_; }
      set {
        giveGuardRecov_ = value;
      }
    }

    /// <summary>Field number for the "attack_type" field.</summary>
    public const int AttackTypeFieldNumber = 20;
    private int attackType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AttackType {
      get { return attackType_; }
      set {
        attackType_ = value;
      }
    }

    /// <summary>Field number for the "down_prop" field.</summary>
    public const int DownPropFieldNumber = 21;
    private bool downProp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DownProp {
      get { return downProp_; }
      set {
        downProp_ = value;
      }
    }

    /// <summary>Field number for the "is_projectile" field.</summary>
    public const int IsProjectileFieldNumber = 22;
    private bool isProjectile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsProjectile {
      get { return isProjectile_; }
      set {
        isProjectile_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GrpcAttackData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GrpcAttackData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SettingHitArea, other.SettingHitArea)) return false;
      if (SettingSpeedX != other.SettingSpeedX) return false;
      if (SettingSpeedY != other.SettingSpeedY) return false;
      if (!object.Equals(CurrentHitArea, other.CurrentHitArea)) return false;
      if (CurrentFrame != other.CurrentFrame) return false;
      if (PlayerNumber != other.PlayerNumber) return false;
      if (SpeedX != other.SpeedX) return false;
      if (SpeedY != other.SpeedY) return false;
      if (StartUp != other.StartUp) return false;
      if (Active != other.Active) return false;
      if (HitDamage != other.HitDamage) return false;
      if (GuardDamage != other.GuardDamage) return false;
      if (StartAddEnergy != other.StartAddEnergy) return false;
      if (HitAddEnergy != other.HitAddEnergy) return false;
      if (GuardAddEnergy != other.GuardAddEnergy) return false;
      if (GiveEnergy != other.GiveEnergy) return false;
      if (ImpactX != other.ImpactX) return false;
      if (ImpactY != other.ImpactY) return false;
      if (GiveGuardRecov != other.GiveGuardRecov) return false;
      if (AttackType != other.AttackType) return false;
      if (DownProp != other.DownProp) return false;
      if (IsProjectile != other.IsProjectile) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (settingHitArea_ != null) hash ^= SettingHitArea.GetHashCode();
      if (SettingSpeedX != 0) hash ^= SettingSpeedX.GetHashCode();
      if (SettingSpeedY != 0) hash ^= SettingSpeedY.GetHashCode();
      if (currentHitArea_ != null) hash ^= CurrentHitArea.GetHashCode();
      if (CurrentFrame != 0) hash ^= CurrentFrame.GetHashCode();
      if (PlayerNumber != false) hash ^= PlayerNumber.GetHashCode();
      if (SpeedX != 0) hash ^= SpeedX.GetHashCode();
      if (SpeedY != 0) hash ^= SpeedY.GetHashCode();
      if (StartUp != 0) hash ^= StartUp.GetHashCode();
      if (Active != 0) hash ^= Active.GetHashCode();
      if (HitDamage != 0) hash ^= HitDamage.GetHashCode();
      if (GuardDamage != 0) hash ^= GuardDamage.GetHashCode();
      if (StartAddEnergy != 0) hash ^= StartAddEnergy.GetHashCode();
      if (HitAddEnergy != 0) hash ^= HitAddEnergy.GetHashCode();
      if (GuardAddEnergy != 0) hash ^= GuardAddEnergy.GetHashCode();
      if (GiveEnergy != 0) hash ^= GiveEnergy.GetHashCode();
      if (ImpactX != 0) hash ^= ImpactX.GetHashCode();
      if (ImpactY != 0) hash ^= ImpactY.GetHashCode();
      if (GiveGuardRecov != 0) hash ^= GiveGuardRecov.GetHashCode();
      if (AttackType != 0) hash ^= AttackType.GetHashCode();
      if (DownProp != false) hash ^= DownProp.GetHashCode();
      if (IsProjectile != false) hash ^= IsProjectile.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (settingHitArea_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SettingHitArea);
      }
      if (SettingSpeedX != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SettingSpeedX);
      }
      if (SettingSpeedY != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SettingSpeedY);
      }
      if (currentHitArea_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CurrentHitArea);
      }
      if (CurrentFrame != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CurrentFrame);
      }
      if (PlayerNumber != false) {
        output.WriteRawTag(48);
        output.WriteBool(PlayerNumber);
      }
      if (SpeedX != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SpeedX);
      }
      if (SpeedY != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(SpeedY);
      }
      if (StartUp != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(StartUp);
      }
      if (Active != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Active);
      }
      if (HitDamage != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(HitDamage);
      }
      if (GuardDamage != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(GuardDamage);
      }
      if (StartAddEnergy != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(StartAddEnergy);
      }
      if (HitAddEnergy != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(HitAddEnergy);
      }
      if (GuardAddEnergy != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(GuardAddEnergy);
      }
      if (GiveEnergy != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(GiveEnergy);
      }
      if (ImpactX != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(ImpactX);
      }
      if (ImpactY != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(ImpactY);
      }
      if (GiveGuardRecov != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(GiveGuardRecov);
      }
      if (AttackType != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(AttackType);
      }
      if (DownProp != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(DownProp);
      }
      if (IsProjectile != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(IsProjectile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (settingHitArea_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SettingHitArea);
      }
      if (SettingSpeedX != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SettingSpeedX);
      }
      if (SettingSpeedY != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SettingSpeedY);
      }
      if (currentHitArea_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CurrentHitArea);
      }
      if (CurrentFrame != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CurrentFrame);
      }
      if (PlayerNumber != false) {
        output.WriteRawTag(48);
        output.WriteBool(PlayerNumber);
      }
      if (SpeedX != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SpeedX);
      }
      if (SpeedY != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(SpeedY);
      }
      if (StartUp != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(StartUp);
      }
      if (Active != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Active);
      }
      if (HitDamage != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(HitDamage);
      }
      if (GuardDamage != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(GuardDamage);
      }
      if (StartAddEnergy != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(StartAddEnergy);
      }
      if (HitAddEnergy != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(HitAddEnergy);
      }
      if (GuardAddEnergy != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(GuardAddEnergy);
      }
      if (GiveEnergy != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(GiveEnergy);
      }
      if (ImpactX != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(ImpactX);
      }
      if (ImpactY != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(ImpactY);
      }
      if (GiveGuardRecov != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(GiveGuardRecov);
      }
      if (AttackType != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(AttackType);
      }
      if (DownProp != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(DownProp);
      }
      if (IsProjectile != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(IsProjectile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (settingHitArea_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SettingHitArea);
      }
      if (SettingSpeedX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SettingSpeedX);
      }
      if (SettingSpeedY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SettingSpeedY);
      }
      if (currentHitArea_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentHitArea);
      }
      if (CurrentFrame != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentFrame);
      }
      if (PlayerNumber != false) {
        size += 1 + 1;
      }
      if (SpeedX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpeedX);
      }
      if (SpeedY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpeedY);
      }
      if (StartUp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartUp);
      }
      if (Active != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Active);
      }
      if (HitDamage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HitDamage);
      }
      if (GuardDamage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuardDamage);
      }
      if (StartAddEnergy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartAddEnergy);
      }
      if (HitAddEnergy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HitAddEnergy);
      }
      if (GuardAddEnergy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuardAddEnergy);
      }
      if (GiveEnergy != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(GiveEnergy);
      }
      if (ImpactX != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImpactX);
      }
      if (ImpactY != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ImpactY);
      }
      if (GiveGuardRecov != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(GiveGuardRecov);
      }
      if (AttackType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AttackType);
      }
      if (DownProp != false) {
        size += 2 + 1;
      }
      if (IsProjectile != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GrpcAttackData other) {
      if (other == null) {
        return;
      }
      if (other.settingHitArea_ != null) {
        if (settingHitArea_ == null) {
          SettingHitArea = new global::DareFightingICE.Grpc.Proto.GrpcHitArea();
        }
        SettingHitArea.MergeFrom(other.SettingHitArea);
      }
      if (other.SettingSpeedX != 0) {
        SettingSpeedX = other.SettingSpeedX;
      }
      if (other.SettingSpeedY != 0) {
        SettingSpeedY = other.SettingSpeedY;
      }
      if (other.currentHitArea_ != null) {
        if (currentHitArea_ == null) {
          CurrentHitArea = new global::DareFightingICE.Grpc.Proto.GrpcHitArea();
        }
        CurrentHitArea.MergeFrom(other.CurrentHitArea);
      }
      if (other.CurrentFrame != 0) {
        CurrentFrame = other.CurrentFrame;
      }
      if (other.PlayerNumber != false) {
        PlayerNumber = other.PlayerNumber;
      }
      if (other.SpeedX != 0) {
        SpeedX = other.SpeedX;
      }
      if (other.SpeedY != 0) {
        SpeedY = other.SpeedY;
      }
      if (other.StartUp != 0) {
        StartUp = other.StartUp;
      }
      if (other.Active != 0) {
        Active = other.Active;
      }
      if (other.HitDamage != 0) {
        HitDamage = other.HitDamage;
      }
      if (other.GuardDamage != 0) {
        GuardDamage = other.GuardDamage;
      }
      if (other.StartAddEnergy != 0) {
        StartAddEnergy = other.StartAddEnergy;
      }
      if (other.HitAddEnergy != 0) {
        HitAddEnergy = other.HitAddEnergy;
      }
      if (other.GuardAddEnergy != 0) {
        GuardAddEnergy = other.GuardAddEnergy;
      }
      if (other.GiveEnergy != 0) {
        GiveEnergy = other.GiveEnergy;
      }
      if (other.ImpactX != 0) {
        ImpactX = other.ImpactX;
      }
      if (other.ImpactY != 0) {
        ImpactY = other.ImpactY;
      }
      if (other.GiveGuardRecov != 0) {
        GiveGuardRecov = other.GiveGuardRecov;
      }
      if (other.AttackType != 0) {
        AttackType = other.AttackType;
      }
      if (other.DownProp != false) {
        DownProp = other.DownProp;
      }
      if (other.IsProjectile != false) {
        IsProjectile = other.IsProjectile;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (settingHitArea_ == null) {
              SettingHitArea = new global::DareFightingICE.Grpc.Proto.GrpcHitArea();
            }
            input.ReadMessage(SettingHitArea);
            break;
          }
          case 16: {
            SettingSpeedX = input.ReadInt32();
            break;
          }
          case 24: {
            SettingSpeedY = input.ReadInt32();
            break;
          }
          case 34: {
            if (currentHitArea_ == null) {
              CurrentHitArea = new global::DareFightingICE.Grpc.Proto.GrpcHitArea();
            }
            input.ReadMessage(CurrentHitArea);
            break;
          }
          case 40: {
            CurrentFrame = input.ReadInt32();
            break;
          }
          case 48: {
            PlayerNumber = input.ReadBool();
            break;
          }
          case 56: {
            SpeedX = input.ReadInt32();
            break;
          }
          case 64: {
            SpeedY = input.ReadInt32();
            break;
          }
          case 72: {
            StartUp = input.ReadInt32();
            break;
          }
          case 80: {
            Active = input.ReadInt32();
            break;
          }
          case 88: {
            HitDamage = input.ReadInt32();
            break;
          }
          case 96: {
            GuardDamage = input.ReadInt32();
            break;
          }
          case 104: {
            StartAddEnergy = input.ReadInt32();
            break;
          }
          case 112: {
            HitAddEnergy = input.ReadInt32();
            break;
          }
          case 120: {
            GuardAddEnergy = input.ReadInt32();
            break;
          }
          case 128: {
            GiveEnergy = input.ReadInt32();
            break;
          }
          case 136: {
            ImpactX = input.ReadInt32();
            break;
          }
          case 144: {
            ImpactY = input.ReadInt32();
            break;
          }
          case 152: {
            GiveGuardRecov = input.ReadInt32();
            break;
          }
          case 160: {
            AttackType = input.ReadInt32();
            break;
          }
          case 168: {
            DownProp = input.ReadBool();
            break;
          }
          case 176: {
            IsProjectile = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (settingHitArea_ == null) {
              SettingHitArea = new global::DareFightingICE.Grpc.Proto.GrpcHitArea();
            }
            input.ReadMessage(SettingHitArea);
            break;
          }
          case 16: {
            SettingSpeedX = input.ReadInt32();
            break;
          }
          case 24: {
            SettingSpeedY = input.ReadInt32();
            break;
          }
          case 34: {
            if (currentHitArea_ == null) {
              CurrentHitArea = new global::DareFightingICE.Grpc.Proto.GrpcHitArea();
            }
            input.ReadMessage(CurrentHitArea);
            break;
          }
          case 40: {
            CurrentFrame = input.ReadInt32();
            break;
          }
          case 48: {
            PlayerNumber = input.ReadBool();
            break;
          }
          case 56: {
            SpeedX = input.ReadInt32();
            break;
          }
          case 64: {
            SpeedY = input.ReadInt32();
            break;
          }
          case 72: {
            StartUp = input.ReadInt32();
            break;
          }
          case 80: {
            Active = input.ReadInt32();
            break;
          }
          case 88: {
            HitDamage = input.ReadInt32();
            break;
          }
          case 96: {
            GuardDamage = input.ReadInt32();
            break;
          }
          case 104: {
            StartAddEnergy = input.ReadInt32();
            break;
          }
          case 112: {
            HitAddEnergy = input.ReadInt32();
            break;
          }
          case 120: {
            GuardAddEnergy = input.ReadInt32();
            break;
          }
          case 128: {
            GiveEnergy = input.ReadInt32();
            break;
          }
          case 136: {
            ImpactX = input.ReadInt32();
            break;
          }
          case 144: {
            ImpactY = input.ReadInt32();
            break;
          }
          case 152: {
            GiveGuardRecov = input.ReadInt32();
            break;
          }
          case 160: {
            AttackType = input.ReadInt32();
            break;
          }
          case 168: {
            DownProp = input.ReadBool();
            break;
          }
          case 176: {
            IsProjectile = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GrpcCharacterData : pb::IMessage<GrpcCharacterData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GrpcCharacterData> _parser = new pb::MessageParser<GrpcCharacterData>(() => new GrpcCharacterData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GrpcCharacterData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DareFightingICE.Grpc.Proto.MessageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcCharacterData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcCharacterData(GrpcCharacterData other) : this() {
      playerNumber_ = other.playerNumber_;
      hp_ = other.hp_;
      energy_ = other.energy_;
      x_ = other.x_;
      y_ = other.y_;
      left_ = other.left_;
      right_ = other.right_;
      top_ = other.top_;
      bottom_ = other.bottom_;
      speedX_ = other.speedX_;
      speedY_ = other.speedY_;
      state_ = other.state_;
      action_ = other.action_;
      front_ = other.front_;
      control_ = other.control_;
      attackData_ = other.attackData_ != null ? other.attackData_.Clone() : null;
      remainingFrame_ = other.remainingFrame_;
      hitConfirm_ = other.hitConfirm_;
      graphicSizeX_ = other.graphicSizeX_;
      graphicSizeY_ = other.graphicSizeY_;
      graphicAdjustX_ = other.graphicAdjustX_;
      hitCount_ = other.hitCount_;
      lastHitFrame_ = other.lastHitFrame_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcCharacterData Clone() {
      return new GrpcCharacterData(this);
    }

    /// <summary>Field number for the "player_number" field.</summary>
    public const int PlayerNumberFieldNumber = 1;
    private bool playerNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PlayerNumber {
      get { return playerNumber_; }
      set {
        playerNumber_ = value;
      }
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 2;
    private int hp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Hp {
      get { return hp_; }
      set {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "energy" field.</summary>
    public const int EnergyFieldNumber = 3;
    private int energy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Energy {
      get { return energy_; }
      set {
        energy_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 4;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 5;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "left" field.</summary>
    public const int LeftFieldNumber = 6;
    private int left_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Left {
      get { return left_; }
      set {
        left_ = value;
      }
    }

    /// <summary>Field number for the "right" field.</summary>
    public const int RightFieldNumber = 7;
    private int right_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Right {
      get { return right_; }
      set {
        right_ = value;
      }
    }

    /// <summary>Field number for the "top" field.</summary>
    public const int TopFieldNumber = 8;
    private int top_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Top {
      get { return top_; }
      set {
        top_ = value;
      }
    }

    /// <summary>Field number for the "bottom" field.</summary>
    public const int BottomFieldNumber = 9;
    private int bottom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Bottom {
      get { return bottom_; }
      set {
        bottom_ = value;
      }
    }

    /// <summary>Field number for the "speed_x" field.</summary>
    public const int SpeedXFieldNumber = 10;
    private int speedX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpeedX {
      get { return speedX_; }
      set {
        speedX_ = value;
      }
    }

    /// <summary>Field number for the "speed_y" field.</summary>
    public const int SpeedYFieldNumber = 11;
    private int speedY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpeedY {
      get { return speedY_; }
      set {
        speedY_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 12;
    private global::DareFightingICE.Grpc.Proto.GrpcState state_ = global::DareFightingICE.Grpc.Proto.GrpcState.StandState;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DareFightingICE.Grpc.Proto.GrpcState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 13;
    private global::DareFightingICE.Grpc.Proto.GrpcAction action_ = global::DareFightingICE.Grpc.Proto.GrpcAction.Neutral;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DareFightingICE.Grpc.Proto.GrpcAction Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    /// <summary>Field number for the "front" field.</summary>
    public const int FrontFieldNumber = 14;
    private bool front_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Front {
      get { return front_; }
      set {
        front_ = value;
      }
    }

    /// <summary>Field number for the "control" field.</summary>
    public const int ControlFieldNumber = 15;
    private bool control_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Control {
      get { return control_; }
      set {
        control_ = value;
      }
    }

    /// <summary>Field number for the "attack_data" field.</summary>
    public const int AttackDataFieldNumber = 16;
    private global::DareFightingICE.Grpc.Proto.GrpcAttackData attackData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DareFightingICE.Grpc.Proto.GrpcAttackData AttackData {
      get { return attackData_; }
      set {
        attackData_ = value;
      }
    }

    /// <summary>Field number for the "remaining_frame" field.</summary>
    public const int RemainingFrameFieldNumber = 17;
    private int remainingFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RemainingFrame {
      get { return remainingFrame_; }
      set {
        remainingFrame_ = value;
      }
    }

    /// <summary>Field number for the "hit_confirm" field.</summary>
    public const int HitConfirmFieldNumber = 18;
    private bool hitConfirm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HitConfirm {
      get { return hitConfirm_; }
      set {
        hitConfirm_ = value;
      }
    }

    /// <summary>Field number for the "graphic_size_x" field.</summary>
    public const int GraphicSizeXFieldNumber = 19;
    private int graphicSizeX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GraphicSizeX {
      get { return graphicSizeX_; }
      set {
        graphicSizeX_ = value;
      }
    }

    /// <summary>Field number for the "graphic_size_y" field.</summary>
    public const int GraphicSizeYFieldNumber = 20;
    private int graphicSizeY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GraphicSizeY {
      get { return graphicSizeY_; }
      set {
        graphicSizeY_ = value;
      }
    }

    /// <summary>Field number for the "graphic_adjust_x" field.</summary>
    public const int GraphicAdjustXFieldNumber = 21;
    private int graphicAdjustX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GraphicAdjustX {
      get { return graphicAdjustX_; }
      set {
        graphicAdjustX_ = value;
      }
    }

    /// <summary>Field number for the "hit_count" field.</summary>
    public const int HitCountFieldNumber = 22;
    private int hitCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HitCount {
      get { return hitCount_; }
      set {
        hitCount_ = value;
      }
    }

    /// <summary>Field number for the "last_hit_frame" field.</summary>
    public const int LastHitFrameFieldNumber = 23;
    private int lastHitFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LastHitFrame {
      get { return lastHitFrame_; }
      set {
        lastHitFrame_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GrpcCharacterData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GrpcCharacterData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerNumber != other.PlayerNumber) return false;
      if (Hp != other.Hp) return false;
      if (Energy != other.Energy) return false;
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Left != other.Left) return false;
      if (Right != other.Right) return false;
      if (Top != other.Top) return false;
      if (Bottom != other.Bottom) return false;
      if (SpeedX != other.SpeedX) return false;
      if (SpeedY != other.SpeedY) return false;
      if (State != other.State) return false;
      if (Action != other.Action) return false;
      if (Front != other.Front) return false;
      if (Control != other.Control) return false;
      if (!object.Equals(AttackData, other.AttackData)) return false;
      if (RemainingFrame != other.RemainingFrame) return false;
      if (HitConfirm != other.HitConfirm) return false;
      if (GraphicSizeX != other.GraphicSizeX) return false;
      if (GraphicSizeY != other.GraphicSizeY) return false;
      if (GraphicAdjustX != other.GraphicAdjustX) return false;
      if (HitCount != other.HitCount) return false;
      if (LastHitFrame != other.LastHitFrame) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerNumber != false) hash ^= PlayerNumber.GetHashCode();
      if (Hp != 0) hash ^= Hp.GetHashCode();
      if (Energy != 0) hash ^= Energy.GetHashCode();
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Left != 0) hash ^= Left.GetHashCode();
      if (Right != 0) hash ^= Right.GetHashCode();
      if (Top != 0) hash ^= Top.GetHashCode();
      if (Bottom != 0) hash ^= Bottom.GetHashCode();
      if (SpeedX != 0) hash ^= SpeedX.GetHashCode();
      if (SpeedY != 0) hash ^= SpeedY.GetHashCode();
      if (State != global::DareFightingICE.Grpc.Proto.GrpcState.StandState) hash ^= State.GetHashCode();
      if (Action != global::DareFightingICE.Grpc.Proto.GrpcAction.Neutral) hash ^= Action.GetHashCode();
      if (Front != false) hash ^= Front.GetHashCode();
      if (Control != false) hash ^= Control.GetHashCode();
      if (attackData_ != null) hash ^= AttackData.GetHashCode();
      if (RemainingFrame != 0) hash ^= RemainingFrame.GetHashCode();
      if (HitConfirm != false) hash ^= HitConfirm.GetHashCode();
      if (GraphicSizeX != 0) hash ^= GraphicSizeX.GetHashCode();
      if (GraphicSizeY != 0) hash ^= GraphicSizeY.GetHashCode();
      if (GraphicAdjustX != 0) hash ^= GraphicAdjustX.GetHashCode();
      if (HitCount != 0) hash ^= HitCount.GetHashCode();
      if (LastHitFrame != 0) hash ^= LastHitFrame.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerNumber != false) {
        output.WriteRawTag(8);
        output.WriteBool(PlayerNumber);
      }
      if (Hp != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Hp);
      }
      if (Energy != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Energy);
      }
      if (X != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Y);
      }
      if (Left != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Left);
      }
      if (Right != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Right);
      }
      if (Top != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Top);
      }
      if (Bottom != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Bottom);
      }
      if (SpeedX != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(SpeedX);
      }
      if (SpeedY != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(SpeedY);
      }
      if (State != global::DareFightingICE.Grpc.Proto.GrpcState.StandState) {
        output.WriteRawTag(96);
        output.WriteEnum((int) State);
      }
      if (Action != global::DareFightingICE.Grpc.Proto.GrpcAction.Neutral) {
        output.WriteRawTag(104);
        output.WriteEnum((int) Action);
      }
      if (Front != false) {
        output.WriteRawTag(112);
        output.WriteBool(Front);
      }
      if (Control != false) {
        output.WriteRawTag(120);
        output.WriteBool(Control);
      }
      if (attackData_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(AttackData);
      }
      if (RemainingFrame != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(RemainingFrame);
      }
      if (HitConfirm != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(HitConfirm);
      }
      if (GraphicSizeX != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(GraphicSizeX);
      }
      if (GraphicSizeY != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(GraphicSizeY);
      }
      if (GraphicAdjustX != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(GraphicAdjustX);
      }
      if (HitCount != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(HitCount);
      }
      if (LastHitFrame != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(LastHitFrame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerNumber != false) {
        output.WriteRawTag(8);
        output.WriteBool(PlayerNumber);
      }
      if (Hp != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Hp);
      }
      if (Energy != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Energy);
      }
      if (X != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Y);
      }
      if (Left != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Left);
      }
      if (Right != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Right);
      }
      if (Top != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Top);
      }
      if (Bottom != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Bottom);
      }
      if (SpeedX != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(SpeedX);
      }
      if (SpeedY != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(SpeedY);
      }
      if (State != global::DareFightingICE.Grpc.Proto.GrpcState.StandState) {
        output.WriteRawTag(96);
        output.WriteEnum((int) State);
      }
      if (Action != global::DareFightingICE.Grpc.Proto.GrpcAction.Neutral) {
        output.WriteRawTag(104);
        output.WriteEnum((int) Action);
      }
      if (Front != false) {
        output.WriteRawTag(112);
        output.WriteBool(Front);
      }
      if (Control != false) {
        output.WriteRawTag(120);
        output.WriteBool(Control);
      }
      if (attackData_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(AttackData);
      }
      if (RemainingFrame != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(RemainingFrame);
      }
      if (HitConfirm != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(HitConfirm);
      }
      if (GraphicSizeX != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(GraphicSizeX);
      }
      if (GraphicSizeY != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(GraphicSizeY);
      }
      if (GraphicAdjustX != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(GraphicAdjustX);
      }
      if (HitCount != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(HitCount);
      }
      if (LastHitFrame != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(LastHitFrame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerNumber != false) {
        size += 1 + 1;
      }
      if (Hp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hp);
      }
      if (Energy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Energy);
      }
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (Left != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Left);
      }
      if (Right != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Right);
      }
      if (Top != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Top);
      }
      if (Bottom != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Bottom);
      }
      if (SpeedX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpeedX);
      }
      if (SpeedY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpeedY);
      }
      if (State != global::DareFightingICE.Grpc.Proto.GrpcState.StandState) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (Action != global::DareFightingICE.Grpc.Proto.GrpcAction.Neutral) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
      }
      if (Front != false) {
        size += 1 + 1;
      }
      if (Control != false) {
        size += 1 + 1;
      }
      if (attackData_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AttackData);
      }
      if (RemainingFrame != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RemainingFrame);
      }
      if (HitConfirm != false) {
        size += 2 + 1;
      }
      if (GraphicSizeX != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(GraphicSizeX);
      }
      if (GraphicSizeY != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(GraphicSizeY);
      }
      if (GraphicAdjustX != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(GraphicAdjustX);
      }
      if (HitCount != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HitCount);
      }
      if (LastHitFrame != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LastHitFrame);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GrpcCharacterData other) {
      if (other == null) {
        return;
      }
      if (other.PlayerNumber != false) {
        PlayerNumber = other.PlayerNumber;
      }
      if (other.Hp != 0) {
        Hp = other.Hp;
      }
      if (other.Energy != 0) {
        Energy = other.Energy;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      if (other.Left != 0) {
        Left = other.Left;
      }
      if (other.Right != 0) {
        Right = other.Right;
      }
      if (other.Top != 0) {
        Top = other.Top;
      }
      if (other.Bottom != 0) {
        Bottom = other.Bottom;
      }
      if (other.SpeedX != 0) {
        SpeedX = other.SpeedX;
      }
      if (other.SpeedY != 0) {
        SpeedY = other.SpeedY;
      }
      if (other.State != global::DareFightingICE.Grpc.Proto.GrpcState.StandState) {
        State = other.State;
      }
      if (other.Action != global::DareFightingICE.Grpc.Proto.GrpcAction.Neutral) {
        Action = other.Action;
      }
      if (other.Front != false) {
        Front = other.Front;
      }
      if (other.Control != false) {
        Control = other.Control;
      }
      if (other.attackData_ != null) {
        if (attackData_ == null) {
          AttackData = new global::DareFightingICE.Grpc.Proto.GrpcAttackData();
        }
        AttackData.MergeFrom(other.AttackData);
      }
      if (other.RemainingFrame != 0) {
        RemainingFrame = other.RemainingFrame;
      }
      if (other.HitConfirm != false) {
        HitConfirm = other.HitConfirm;
      }
      if (other.GraphicSizeX != 0) {
        GraphicSizeX = other.GraphicSizeX;
      }
      if (other.GraphicSizeY != 0) {
        GraphicSizeY = other.GraphicSizeY;
      }
      if (other.GraphicAdjustX != 0) {
        GraphicAdjustX = other.GraphicAdjustX;
      }
      if (other.HitCount != 0) {
        HitCount = other.HitCount;
      }
      if (other.LastHitFrame != 0) {
        LastHitFrame = other.LastHitFrame;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerNumber = input.ReadBool();
            break;
          }
          case 16: {
            Hp = input.ReadInt32();
            break;
          }
          case 24: {
            Energy = input.ReadInt32();
            break;
          }
          case 32: {
            X = input.ReadInt32();
            break;
          }
          case 40: {
            Y = input.ReadInt32();
            break;
          }
          case 48: {
            Left = input.ReadInt32();
            break;
          }
          case 56: {
            Right = input.ReadInt32();
            break;
          }
          case 64: {
            Top = input.ReadInt32();
            break;
          }
          case 72: {
            Bottom = input.ReadInt32();
            break;
          }
          case 80: {
            SpeedX = input.ReadInt32();
            break;
          }
          case 88: {
            SpeedY = input.ReadInt32();
            break;
          }
          case 96: {
            State = (global::DareFightingICE.Grpc.Proto.GrpcState) input.ReadEnum();
            break;
          }
          case 104: {
            Action = (global::DareFightingICE.Grpc.Proto.GrpcAction) input.ReadEnum();
            break;
          }
          case 112: {
            Front = input.ReadBool();
            break;
          }
          case 120: {
            Control = input.ReadBool();
            break;
          }
          case 130: {
            if (attackData_ == null) {
              AttackData = new global::DareFightingICE.Grpc.Proto.GrpcAttackData();
            }
            input.ReadMessage(AttackData);
            break;
          }
          case 136: {
            RemainingFrame = input.ReadInt32();
            break;
          }
          case 144: {
            HitConfirm = input.ReadBool();
            break;
          }
          case 152: {
            GraphicSizeX = input.ReadInt32();
            break;
          }
          case 160: {
            GraphicSizeY = input.ReadInt32();
            break;
          }
          case 168: {
            GraphicAdjustX = input.ReadInt32();
            break;
          }
          case 176: {
            HitCount = input.ReadInt32();
            break;
          }
          case 184: {
            LastHitFrame = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerNumber = input.ReadBool();
            break;
          }
          case 16: {
            Hp = input.ReadInt32();
            break;
          }
          case 24: {
            Energy = input.ReadInt32();
            break;
          }
          case 32: {
            X = input.ReadInt32();
            break;
          }
          case 40: {
            Y = input.ReadInt32();
            break;
          }
          case 48: {
            Left = input.ReadInt32();
            break;
          }
          case 56: {
            Right = input.ReadInt32();
            break;
          }
          case 64: {
            Top = input.ReadInt32();
            break;
          }
          case 72: {
            Bottom = input.ReadInt32();
            break;
          }
          case 80: {
            SpeedX = input.ReadInt32();
            break;
          }
          case 88: {
            SpeedY = input.ReadInt32();
            break;
          }
          case 96: {
            State = (global::DareFightingICE.Grpc.Proto.GrpcState) input.ReadEnum();
            break;
          }
          case 104: {
            Action = (global::DareFightingICE.Grpc.Proto.GrpcAction) input.ReadEnum();
            break;
          }
          case 112: {
            Front = input.ReadBool();
            break;
          }
          case 120: {
            Control = input.ReadBool();
            break;
          }
          case 130: {
            if (attackData_ == null) {
              AttackData = new global::DareFightingICE.Grpc.Proto.GrpcAttackData();
            }
            input.ReadMessage(AttackData);
            break;
          }
          case 136: {
            RemainingFrame = input.ReadInt32();
            break;
          }
          case 144: {
            HitConfirm = input.ReadBool();
            break;
          }
          case 152: {
            GraphicSizeX = input.ReadInt32();
            break;
          }
          case 160: {
            GraphicSizeY = input.ReadInt32();
            break;
          }
          case 168: {
            GraphicAdjustX = input.ReadInt32();
            break;
          }
          case 176: {
            HitCount = input.ReadInt32();
            break;
          }
          case 184: {
            LastHitFrame = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GrpcFrameData : pb::IMessage<GrpcFrameData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GrpcFrameData> _parser = new pb::MessageParser<GrpcFrameData>(() => new GrpcFrameData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GrpcFrameData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DareFightingICE.Grpc.Proto.MessageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcFrameData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcFrameData(GrpcFrameData other) : this() {
      characterData_ = other.characterData_.Clone();
      currentFrameNumber_ = other.currentFrameNumber_;
      currentRound_ = other.currentRound_;
      projectileData_ = other.projectileData_.Clone();
      emptyFlag_ = other.emptyFlag_;
      front_ = other.front_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcFrameData Clone() {
      return new GrpcFrameData(this);
    }

    /// <summary>Field number for the "character_data" field.</summary>
    public const int CharacterDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::DareFightingICE.Grpc.Proto.GrpcCharacterData> _repeated_characterData_codec
        = pb::FieldCodec.ForMessage(10, global::DareFightingICE.Grpc.Proto.GrpcCharacterData.Parser);
    private readonly pbc::RepeatedField<global::DareFightingICE.Grpc.Proto.GrpcCharacterData> characterData_ = new pbc::RepeatedField<global::DareFightingICE.Grpc.Proto.GrpcCharacterData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::DareFightingICE.Grpc.Proto.GrpcCharacterData> CharacterData {
      get { return characterData_; }
    }

    /// <summary>Field number for the "current_frame_number" field.</summary>
    public const int CurrentFrameNumberFieldNumber = 2;
    private int currentFrameNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrentFrameNumber {
      get { return currentFrameNumber_; }
      set {
        currentFrameNumber_ = value;
      }
    }

    /// <summary>Field number for the "current_round" field.</summary>
    public const int CurrentRoundFieldNumber = 3;
    private int currentRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrentRound {
      get { return currentRound_; }
      set {
        currentRound_ = value;
      }
    }

    /// <summary>Field number for the "projectile_data" field.</summary>
    public const int ProjectileDataFieldNumber = 4;
    private static readonly pb::FieldCodec<global::DareFightingICE.Grpc.Proto.GrpcAttackData> _repeated_projectileData_codec
        = pb::FieldCodec.ForMessage(34, global::DareFightingICE.Grpc.Proto.GrpcAttackData.Parser);
    private readonly pbc::RepeatedField<global::DareFightingICE.Grpc.Proto.GrpcAttackData> projectileData_ = new pbc::RepeatedField<global::DareFightingICE.Grpc.Proto.GrpcAttackData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::DareFightingICE.Grpc.Proto.GrpcAttackData> ProjectileData {
      get { return projectileData_; }
    }

    /// <summary>Field number for the "empty_flag" field.</summary>
    public const int EmptyFlagFieldNumber = 5;
    private bool emptyFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EmptyFlag {
      get { return emptyFlag_; }
      set {
        emptyFlag_ = value;
      }
    }

    /// <summary>Field number for the "front" field.</summary>
    public const int FrontFieldNumber = 6;
    private static readonly pb::FieldCodec<bool> _repeated_front_codec
        = pb::FieldCodec.ForBool(50);
    private readonly pbc::RepeatedField<bool> front_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<bool> Front {
      get { return front_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GrpcFrameData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GrpcFrameData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!characterData_.Equals(other.characterData_)) return false;
      if (CurrentFrameNumber != other.CurrentFrameNumber) return false;
      if (CurrentRound != other.CurrentRound) return false;
      if(!projectileData_.Equals(other.projectileData_)) return false;
      if (EmptyFlag != other.EmptyFlag) return false;
      if(!front_.Equals(other.front_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= characterData_.GetHashCode();
      if (CurrentFrameNumber != 0) hash ^= CurrentFrameNumber.GetHashCode();
      if (CurrentRound != 0) hash ^= CurrentRound.GetHashCode();
      hash ^= projectileData_.GetHashCode();
      if (EmptyFlag != false) hash ^= EmptyFlag.GetHashCode();
      hash ^= front_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      characterData_.WriteTo(output, _repeated_characterData_codec);
      if (CurrentFrameNumber != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurrentFrameNumber);
      }
      if (CurrentRound != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurrentRound);
      }
      projectileData_.WriteTo(output, _repeated_projectileData_codec);
      if (EmptyFlag != false) {
        output.WriteRawTag(40);
        output.WriteBool(EmptyFlag);
      }
      front_.WriteTo(output, _repeated_front_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      characterData_.WriteTo(ref output, _repeated_characterData_codec);
      if (CurrentFrameNumber != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurrentFrameNumber);
      }
      if (CurrentRound != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurrentRound);
      }
      projectileData_.WriteTo(ref output, _repeated_projectileData_codec);
      if (EmptyFlag != false) {
        output.WriteRawTag(40);
        output.WriteBool(EmptyFlag);
      }
      front_.WriteTo(ref output, _repeated_front_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += characterData_.CalculateSize(_repeated_characterData_codec);
      if (CurrentFrameNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentFrameNumber);
      }
      if (CurrentRound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentRound);
      }
      size += projectileData_.CalculateSize(_repeated_projectileData_codec);
      if (EmptyFlag != false) {
        size += 1 + 1;
      }
      size += front_.CalculateSize(_repeated_front_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GrpcFrameData other) {
      if (other == null) {
        return;
      }
      characterData_.Add(other.characterData_);
      if (other.CurrentFrameNumber != 0) {
        CurrentFrameNumber = other.CurrentFrameNumber;
      }
      if (other.CurrentRound != 0) {
        CurrentRound = other.CurrentRound;
      }
      projectileData_.Add(other.projectileData_);
      if (other.EmptyFlag != false) {
        EmptyFlag = other.EmptyFlag;
      }
      front_.Add(other.front_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            characterData_.AddEntriesFrom(input, _repeated_characterData_codec);
            break;
          }
          case 16: {
            CurrentFrameNumber = input.ReadInt32();
            break;
          }
          case 24: {
            CurrentRound = input.ReadInt32();
            break;
          }
          case 34: {
            projectileData_.AddEntriesFrom(input, _repeated_projectileData_codec);
            break;
          }
          case 40: {
            EmptyFlag = input.ReadBool();
            break;
          }
          case 50:
          case 48: {
            front_.AddEntriesFrom(input, _repeated_front_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            characterData_.AddEntriesFrom(ref input, _repeated_characterData_codec);
            break;
          }
          case 16: {
            CurrentFrameNumber = input.ReadInt32();
            break;
          }
          case 24: {
            CurrentRound = input.ReadInt32();
            break;
          }
          case 34: {
            projectileData_.AddEntriesFrom(ref input, _repeated_projectileData_codec);
            break;
          }
          case 40: {
            EmptyFlag = input.ReadBool();
            break;
          }
          case 50:
          case 48: {
            front_.AddEntriesFrom(ref input, _repeated_front_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GrpcFftData : pb::IMessage<GrpcFftData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GrpcFftData> _parser = new pb::MessageParser<GrpcFftData>(() => new GrpcFftData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GrpcFftData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DareFightingICE.Grpc.Proto.MessageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcFftData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcFftData(GrpcFftData other) : this() {
      realDataAsBytes_ = other.realDataAsBytes_;
      imaginaryDataAsBytes_ = other.imaginaryDataAsBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcFftData Clone() {
      return new GrpcFftData(this);
    }

    /// <summary>Field number for the "real_data_as_bytes" field.</summary>
    public const int RealDataAsBytesFieldNumber = 1;
    private pb::ByteString realDataAsBytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString RealDataAsBytes {
      get { return realDataAsBytes_; }
      set {
        realDataAsBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "imaginary_data_as_bytes" field.</summary>
    public const int ImaginaryDataAsBytesFieldNumber = 2;
    private pb::ByteString imaginaryDataAsBytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString ImaginaryDataAsBytes {
      get { return imaginaryDataAsBytes_; }
      set {
        imaginaryDataAsBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GrpcFftData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GrpcFftData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RealDataAsBytes != other.RealDataAsBytes) return false;
      if (ImaginaryDataAsBytes != other.ImaginaryDataAsBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RealDataAsBytes.Length != 0) hash ^= RealDataAsBytes.GetHashCode();
      if (ImaginaryDataAsBytes.Length != 0) hash ^= ImaginaryDataAsBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RealDataAsBytes.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(RealDataAsBytes);
      }
      if (ImaginaryDataAsBytes.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ImaginaryDataAsBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RealDataAsBytes.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(RealDataAsBytes);
      }
      if (ImaginaryDataAsBytes.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ImaginaryDataAsBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RealDataAsBytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RealDataAsBytes);
      }
      if (ImaginaryDataAsBytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ImaginaryDataAsBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GrpcFftData other) {
      if (other == null) {
        return;
      }
      if (other.RealDataAsBytes.Length != 0) {
        RealDataAsBytes = other.RealDataAsBytes;
      }
      if (other.ImaginaryDataAsBytes.Length != 0) {
        ImaginaryDataAsBytes = other.ImaginaryDataAsBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RealDataAsBytes = input.ReadBytes();
            break;
          }
          case 18: {
            ImaginaryDataAsBytes = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RealDataAsBytes = input.ReadBytes();
            break;
          }
          case 18: {
            ImaginaryDataAsBytes = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GrpcScreenData : pb::IMessage<GrpcScreenData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GrpcScreenData> _parser = new pb::MessageParser<GrpcScreenData>(() => new GrpcScreenData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GrpcScreenData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DareFightingICE.Grpc.Proto.MessageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcScreenData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcScreenData(GrpcScreenData other) : this() {
      displayBytes_ = other.displayBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcScreenData Clone() {
      return new GrpcScreenData(this);
    }

    /// <summary>Field number for the "display_bytes" field.</summary>
    public const int DisplayBytesFieldNumber = 1;
    private pb::ByteString displayBytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString DisplayBytes {
      get { return displayBytes_; }
      set {
        displayBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GrpcScreenData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GrpcScreenData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DisplayBytes != other.DisplayBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (DisplayBytes.Length != 0) hash ^= DisplayBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DisplayBytes.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DisplayBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DisplayBytes.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DisplayBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (DisplayBytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DisplayBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GrpcScreenData other) {
      if (other == null) {
        return;
      }
      if (other.DisplayBytes.Length != 0) {
        DisplayBytes = other.DisplayBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DisplayBytes = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DisplayBytes = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GrpcAudioData : pb::IMessage<GrpcAudioData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GrpcAudioData> _parser = new pb::MessageParser<GrpcAudioData>(() => new GrpcAudioData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GrpcAudioData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DareFightingICE.Grpc.Proto.MessageReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcAudioData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcAudioData(GrpcAudioData other) : this() {
      rawDataAsBytes_ = other.rawDataAsBytes_;
      fftData_ = other.fftData_.Clone();
      spectrogramDataAsBytes_ = other.spectrogramDataAsBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcAudioData Clone() {
      return new GrpcAudioData(this);
    }

    /// <summary>Field number for the "raw_data_as_bytes" field.</summary>
    public const int RawDataAsBytesFieldNumber = 1;
    private pb::ByteString rawDataAsBytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString RawDataAsBytes {
      get { return rawDataAsBytes_; }
      set {
        rawDataAsBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fft_data" field.</summary>
    public const int FftDataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::DareFightingICE.Grpc.Proto.GrpcFftData> _repeated_fftData_codec
        = pb::FieldCodec.ForMessage(18, global::DareFightingICE.Grpc.Proto.GrpcFftData.Parser);
    private readonly pbc::RepeatedField<global::DareFightingICE.Grpc.Proto.GrpcFftData> fftData_ = new pbc::RepeatedField<global::DareFightingICE.Grpc.Proto.GrpcFftData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::DareFightingICE.Grpc.Proto.GrpcFftData> FftData {
      get { return fftData_; }
    }

    /// <summary>Field number for the "spectrogram_data_as_bytes" field.</summary>
    public const int SpectrogramDataAsBytesFieldNumber = 3;
    private pb::ByteString spectrogramDataAsBytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString SpectrogramDataAsBytes {
      get { return spectrogramDataAsBytes_; }
      set {
        spectrogramDataAsBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GrpcAudioData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GrpcAudioData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RawDataAsBytes != other.RawDataAsBytes) return false;
      if(!fftData_.Equals(other.fftData_)) return false;
      if (SpectrogramDataAsBytes != other.SpectrogramDataAsBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RawDataAsBytes.Length != 0) hash ^= RawDataAsBytes.GetHashCode();
      hash ^= fftData_.GetHashCode();
      if (SpectrogramDataAsBytes.Length != 0) hash ^= SpectrogramDataAsBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RawDataAsBytes.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(RawDataAsBytes);
      }
      fftData_.WriteTo(output, _repeated_fftData_codec);
      if (SpectrogramDataAsBytes.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(SpectrogramDataAsBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RawDataAsBytes.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(RawDataAsBytes);
      }
      fftData_.WriteTo(ref output, _repeated_fftData_codec);
      if (SpectrogramDataAsBytes.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(SpectrogramDataAsBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RawDataAsBytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RawDataAsBytes);
      }
      size += fftData_.CalculateSize(_repeated_fftData_codec);
      if (SpectrogramDataAsBytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SpectrogramDataAsBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GrpcAudioData other) {
      if (other == null) {
        return;
      }
      if (other.RawDataAsBytes.Length != 0) {
        RawDataAsBytes = other.RawDataAsBytes;
      }
      fftData_.Add(other.fftData_);
      if (other.SpectrogramDataAsBytes.Length != 0) {
        SpectrogramDataAsBytes = other.SpectrogramDataAsBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RawDataAsBytes = input.ReadBytes();
            break;
          }
          case 18: {
            fftData_.AddEntriesFrom(input, _repeated_fftData_codec);
            break;
          }
          case 26: {
            SpectrogramDataAsBytes = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RawDataAsBytes = input.ReadBytes();
            break;
          }
          case 18: {
            fftData_.AddEntriesFrom(ref input, _repeated_fftData_codec);
            break;
          }
          case 26: {
            SpectrogramDataAsBytes = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GrpcGameData : pb::IMessage<GrpcGameData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GrpcGameData> _parser = new pb::MessageParser<GrpcGameData>(() => new GrpcGameData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GrpcGameData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DareFightingICE.Grpc.Proto.MessageReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcGameData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcGameData(GrpcGameData other) : this() {
      maxHps_ = other.maxHps_.Clone();
      maxEnergies_ = other.maxEnergies_.Clone();
      characterNames_ = other.characterNames_.Clone();
      aiNames_ = other.aiNames_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcGameData Clone() {
      return new GrpcGameData(this);
    }

    /// <summary>Field number for the "max_hps" field.</summary>
    public const int MaxHpsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_maxHps_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> maxHps_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> MaxHps {
      get { return maxHps_; }
    }

    /// <summary>Field number for the "max_energies" field.</summary>
    public const int MaxEnergiesFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_maxEnergies_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> maxEnergies_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> MaxEnergies {
      get { return maxEnergies_; }
    }

    /// <summary>Field number for the "character_names" field.</summary>
    public const int CharacterNamesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_characterNames_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> characterNames_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> CharacterNames {
      get { return characterNames_; }
    }

    /// <summary>Field number for the "ai_names" field.</summary>
    public const int AiNamesFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_aiNames_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> aiNames_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> AiNames {
      get { return aiNames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GrpcGameData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GrpcGameData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!maxHps_.Equals(other.maxHps_)) return false;
      if(!maxEnergies_.Equals(other.maxEnergies_)) return false;
      if(!characterNames_.Equals(other.characterNames_)) return false;
      if(!aiNames_.Equals(other.aiNames_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= maxHps_.GetHashCode();
      hash ^= maxEnergies_.GetHashCode();
      hash ^= characterNames_.GetHashCode();
      hash ^= aiNames_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      maxHps_.WriteTo(output, _repeated_maxHps_codec);
      maxEnergies_.WriteTo(output, _repeated_maxEnergies_codec);
      characterNames_.WriteTo(output, _repeated_characterNames_codec);
      aiNames_.WriteTo(output, _repeated_aiNames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      maxHps_.WriteTo(ref output, _repeated_maxHps_codec);
      maxEnergies_.WriteTo(ref output, _repeated_maxEnergies_codec);
      characterNames_.WriteTo(ref output, _repeated_characterNames_codec);
      aiNames_.WriteTo(ref output, _repeated_aiNames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += maxHps_.CalculateSize(_repeated_maxHps_codec);
      size += maxEnergies_.CalculateSize(_repeated_maxEnergies_codec);
      size += characterNames_.CalculateSize(_repeated_characterNames_codec);
      size += aiNames_.CalculateSize(_repeated_aiNames_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GrpcGameData other) {
      if (other == null) {
        return;
      }
      maxHps_.Add(other.maxHps_);
      maxEnergies_.Add(other.maxEnergies_);
      characterNames_.Add(other.characterNames_);
      aiNames_.Add(other.aiNames_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            maxHps_.AddEntriesFrom(input, _repeated_maxHps_codec);
            break;
          }
          case 18:
          case 16: {
            maxEnergies_.AddEntriesFrom(input, _repeated_maxEnergies_codec);
            break;
          }
          case 26: {
            characterNames_.AddEntriesFrom(input, _repeated_characterNames_codec);
            break;
          }
          case 34: {
            aiNames_.AddEntriesFrom(input, _repeated_aiNames_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            maxHps_.AddEntriesFrom(ref input, _repeated_maxHps_codec);
            break;
          }
          case 18:
          case 16: {
            maxEnergies_.AddEntriesFrom(ref input, _repeated_maxEnergies_codec);
            break;
          }
          case 26: {
            characterNames_.AddEntriesFrom(ref input, _repeated_characterNames_codec);
            break;
          }
          case 34: {
            aiNames_.AddEntriesFrom(ref input, _repeated_aiNames_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GrpcRoundResult : pb::IMessage<GrpcRoundResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GrpcRoundResult> _parser = new pb::MessageParser<GrpcRoundResult>(() => new GrpcRoundResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GrpcRoundResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DareFightingICE.Grpc.Proto.MessageReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcRoundResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcRoundResult(GrpcRoundResult other) : this() {
      currentRound_ = other.currentRound_;
      remainingHps_ = other.remainingHps_.Clone();
      elapsedFrame_ = other.elapsedFrame_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcRoundResult Clone() {
      return new GrpcRoundResult(this);
    }

    /// <summary>Field number for the "current_round" field.</summary>
    public const int CurrentRoundFieldNumber = 1;
    private int currentRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrentRound {
      get { return currentRound_; }
      set {
        currentRound_ = value;
      }
    }

    /// <summary>Field number for the "remaining_hps" field.</summary>
    public const int RemainingHpsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_remainingHps_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> remainingHps_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> RemainingHps {
      get { return remainingHps_; }
    }

    /// <summary>Field number for the "elapsed_frame" field.</summary>
    public const int ElapsedFrameFieldNumber = 3;
    private int elapsedFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ElapsedFrame {
      get { return elapsedFrame_; }
      set {
        elapsedFrame_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GrpcRoundResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GrpcRoundResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurrentRound != other.CurrentRound) return false;
      if(!remainingHps_.Equals(other.remainingHps_)) return false;
      if (ElapsedFrame != other.ElapsedFrame) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CurrentRound != 0) hash ^= CurrentRound.GetHashCode();
      hash ^= remainingHps_.GetHashCode();
      if (ElapsedFrame != 0) hash ^= ElapsedFrame.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CurrentRound != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurrentRound);
      }
      remainingHps_.WriteTo(output, _repeated_remainingHps_codec);
      if (ElapsedFrame != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ElapsedFrame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CurrentRound != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurrentRound);
      }
      remainingHps_.WriteTo(ref output, _repeated_remainingHps_codec);
      if (ElapsedFrame != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ElapsedFrame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CurrentRound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentRound);
      }
      size += remainingHps_.CalculateSize(_repeated_remainingHps_codec);
      if (ElapsedFrame != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ElapsedFrame);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GrpcRoundResult other) {
      if (other == null) {
        return;
      }
      if (other.CurrentRound != 0) {
        CurrentRound = other.CurrentRound;
      }
      remainingHps_.Add(other.remainingHps_);
      if (other.ElapsedFrame != 0) {
        ElapsedFrame = other.ElapsedFrame;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CurrentRound = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            remainingHps_.AddEntriesFrom(input, _repeated_remainingHps_codec);
            break;
          }
          case 24: {
            ElapsedFrame = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CurrentRound = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            remainingHps_.AddEntriesFrom(ref input, _repeated_remainingHps_codec);
            break;
          }
          case 24: {
            ElapsedFrame = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GrpcKey : pb::IMessage<GrpcKey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GrpcKey> _parser = new pb::MessageParser<GrpcKey>(() => new GrpcKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GrpcKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DareFightingICE.Grpc.Proto.MessageReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcKey(GrpcKey other) : this() {
      a_ = other.a_;
      b_ = other.b_;
      c_ = other.c_;
      u_ = other.u_;
      r_ = other.r_;
      d_ = other.d_;
      l_ = other.l_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GrpcKey Clone() {
      return new GrpcKey(this);
    }

    /// <summary>Field number for the "A" field.</summary>
    public const int AFieldNumber = 1;
    private bool a_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool A {
      get { return a_; }
      set {
        a_ = value;
      }
    }

    /// <summary>Field number for the "B" field.</summary>
    public const int BFieldNumber = 2;
    private bool b_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool B {
      get { return b_; }
      set {
        b_ = value;
      }
    }

    /// <summary>Field number for the "C" field.</summary>
    public const int CFieldNumber = 3;
    private bool c_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool C {
      get { return c_; }
      set {
        c_ = value;
      }
    }

    /// <summary>Field number for the "U" field.</summary>
    public const int UFieldNumber = 4;
    private bool u_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool U {
      get { return u_; }
      set {
        u_ = value;
      }
    }

    /// <summary>Field number for the "R" field.</summary>
    public const int RFieldNumber = 5;
    private bool r_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool R {
      get { return r_; }
      set {
        r_ = value;
      }
    }

    /// <summary>Field number for the "D" field.</summary>
    public const int DFieldNumber = 6;
    private bool d_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool D {
      get { return d_; }
      set {
        d_ = value;
      }
    }

    /// <summary>Field number for the "L" field.</summary>
    public const int LFieldNumber = 7;
    private bool l_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool L {
      get { return l_; }
      set {
        l_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GrpcKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GrpcKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (A != other.A) return false;
      if (B != other.B) return false;
      if (C != other.C) return false;
      if (U != other.U) return false;
      if (R != other.R) return false;
      if (D != other.D) return false;
      if (L != other.L) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (A != false) hash ^= A.GetHashCode();
      if (B != false) hash ^= B.GetHashCode();
      if (C != false) hash ^= C.GetHashCode();
      if (U != false) hash ^= U.GetHashCode();
      if (R != false) hash ^= R.GetHashCode();
      if (D != false) hash ^= D.GetHashCode();
      if (L != false) hash ^= L.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (A != false) {
        output.WriteRawTag(8);
        output.WriteBool(A);
      }
      if (B != false) {
        output.WriteRawTag(16);
        output.WriteBool(B);
      }
      if (C != false) {
        output.WriteRawTag(24);
        output.WriteBool(C);
      }
      if (U != false) {
        output.WriteRawTag(32);
        output.WriteBool(U);
      }
      if (R != false) {
        output.WriteRawTag(40);
        output.WriteBool(R);
      }
      if (D != false) {
        output.WriteRawTag(48);
        output.WriteBool(D);
      }
      if (L != false) {
        output.WriteRawTag(56);
        output.WriteBool(L);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (A != false) {
        output.WriteRawTag(8);
        output.WriteBool(A);
      }
      if (B != false) {
        output.WriteRawTag(16);
        output.WriteBool(B);
      }
      if (C != false) {
        output.WriteRawTag(24);
        output.WriteBool(C);
      }
      if (U != false) {
        output.WriteRawTag(32);
        output.WriteBool(U);
      }
      if (R != false) {
        output.WriteRawTag(40);
        output.WriteBool(R);
      }
      if (D != false) {
        output.WriteRawTag(48);
        output.WriteBool(D);
      }
      if (L != false) {
        output.WriteRawTag(56);
        output.WriteBool(L);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (A != false) {
        size += 1 + 1;
      }
      if (B != false) {
        size += 1 + 1;
      }
      if (C != false) {
        size += 1 + 1;
      }
      if (U != false) {
        size += 1 + 1;
      }
      if (R != false) {
        size += 1 + 1;
      }
      if (D != false) {
        size += 1 + 1;
      }
      if (L != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GrpcKey other) {
      if (other == null) {
        return;
      }
      if (other.A != false) {
        A = other.A;
      }
      if (other.B != false) {
        B = other.B;
      }
      if (other.C != false) {
        C = other.C;
      }
      if (other.U != false) {
        U = other.U;
      }
      if (other.R != false) {
        R = other.R;
      }
      if (other.D != false) {
        D = other.D;
      }
      if (other.L != false) {
        L = other.L;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            A = input.ReadBool();
            break;
          }
          case 16: {
            B = input.ReadBool();
            break;
          }
          case 24: {
            C = input.ReadBool();
            break;
          }
          case 32: {
            U = input.ReadBool();
            break;
          }
          case 40: {
            R = input.ReadBool();
            break;
          }
          case 48: {
            D = input.ReadBool();
            break;
          }
          case 56: {
            L = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            A = input.ReadBool();
            break;
          }
          case 16: {
            B = input.ReadBool();
            break;
          }
          case 24: {
            C = input.ReadBool();
            break;
          }
          case 32: {
            U = input.ReadBool();
            break;
          }
          case 40: {
            R = input.ReadBool();
            break;
          }
          case 48: {
            D = input.ReadBool();
            break;
          }
          case 56: {
            L = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
