// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: service.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace DareFightingICE.Grpc.Proto {
  public static partial class Service
  {
    static readonly string __ServiceName = "service.Service";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DareFightingICE.Grpc.Proto.RunGameRequest> __Marshaller_service_RunGameRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DareFightingICE.Grpc.Proto.RunGameRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DareFightingICE.Grpc.Proto.SpectateRequest> __Marshaller_service_SpectateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DareFightingICE.Grpc.Proto.SpectateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DareFightingICE.Grpc.Proto.SpectatorGameState> __Marshaller_service_SpectatorGameState = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DareFightingICE.Grpc.Proto.SpectatorGameState.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DareFightingICE.Grpc.Proto.InitializeRequest> __Marshaller_service_InitializeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DareFightingICE.Grpc.Proto.InitializeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DareFightingICE.Grpc.Proto.InitializeResponse> __Marshaller_service_InitializeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DareFightingICE.Grpc.Proto.InitializeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DareFightingICE.Grpc.Proto.ParticipateRequest> __Marshaller_service_ParticipateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DareFightingICE.Grpc.Proto.ParticipateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DareFightingICE.Grpc.Proto.PlayerGameState> __Marshaller_service_PlayerGameState = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DareFightingICE.Grpc.Proto.PlayerGameState.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DareFightingICE.Grpc.Proto.PlayerInput> __Marshaller_service_PlayerInput = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DareFightingICE.Grpc.Proto.PlayerInput.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::DareFightingICE.Grpc.Proto.RunGameRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RunGame = new grpc::Method<global::DareFightingICE.Grpc.Proto.RunGameRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RunGame",
        __Marshaller_service_RunGameRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::DareFightingICE.Grpc.Proto.SpectateRequest, global::DareFightingICE.Grpc.Proto.SpectatorGameState> __Method_Spectate = new grpc::Method<global::DareFightingICE.Grpc.Proto.SpectateRequest, global::DareFightingICE.Grpc.Proto.SpectatorGameState>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "Spectate",
        __Marshaller_service_SpectateRequest,
        __Marshaller_service_SpectatorGameState);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::DareFightingICE.Grpc.Proto.InitializeRequest, global::DareFightingICE.Grpc.Proto.InitializeResponse> __Method_Initialize = new grpc::Method<global::DareFightingICE.Grpc.Proto.InitializeRequest, global::DareFightingICE.Grpc.Proto.InitializeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Initialize",
        __Marshaller_service_InitializeRequest,
        __Marshaller_service_InitializeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::DareFightingICE.Grpc.Proto.ParticipateRequest, global::DareFightingICE.Grpc.Proto.PlayerGameState> __Method_Participate = new grpc::Method<global::DareFightingICE.Grpc.Proto.ParticipateRequest, global::DareFightingICE.Grpc.Proto.PlayerGameState>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "Participate",
        __Marshaller_service_ParticipateRequest,
        __Marshaller_service_PlayerGameState);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::DareFightingICE.Grpc.Proto.PlayerInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Input = new grpc::Method<global::DareFightingICE.Grpc.Proto.PlayerInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Input",
        __Marshaller_service_PlayerInput,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::DareFightingICE.Grpc.Proto.ServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Service</summary>
    [grpc::BindServiceMethod(typeof(Service), "BindService")]
    public abstract partial class ServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> RunGame(global::DareFightingICE.Grpc.Proto.RunGameRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task Spectate(global::DareFightingICE.Grpc.Proto.SpectateRequest request, grpc::IServerStreamWriter<global::DareFightingICE.Grpc.Proto.SpectatorGameState> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::DareFightingICE.Grpc.Proto.InitializeResponse> Initialize(global::DareFightingICE.Grpc.Proto.InitializeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task Participate(global::DareFightingICE.Grpc.Proto.ParticipateRequest request, grpc::IServerStreamWriter<global::DareFightingICE.Grpc.Proto.PlayerGameState> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> Input(global::DareFightingICE.Grpc.Proto.PlayerInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Service</summary>
    public partial class ServiceClient : grpc::ClientBase<ServiceClient>
    {
      /// <summary>Creates a new client for Service</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Service that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty RunGame(global::DareFightingICE.Grpc.Proto.RunGameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RunGame(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty RunGame(global::DareFightingICE.Grpc.Proto.RunGameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RunGame, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> RunGameAsync(global::DareFightingICE.Grpc.Proto.RunGameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RunGameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> RunGameAsync(global::DareFightingICE.Grpc.Proto.RunGameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RunGame, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::DareFightingICE.Grpc.Proto.SpectatorGameState> Spectate(global::DareFightingICE.Grpc.Proto.SpectateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Spectate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::DareFightingICE.Grpc.Proto.SpectatorGameState> Spectate(global::DareFightingICE.Grpc.Proto.SpectateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_Spectate, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::DareFightingICE.Grpc.Proto.InitializeResponse Initialize(global::DareFightingICE.Grpc.Proto.InitializeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Initialize(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::DareFightingICE.Grpc.Proto.InitializeResponse Initialize(global::DareFightingICE.Grpc.Proto.InitializeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Initialize, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::DareFightingICE.Grpc.Proto.InitializeResponse> InitializeAsync(global::DareFightingICE.Grpc.Proto.InitializeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InitializeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::DareFightingICE.Grpc.Proto.InitializeResponse> InitializeAsync(global::DareFightingICE.Grpc.Proto.InitializeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Initialize, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::DareFightingICE.Grpc.Proto.PlayerGameState> Participate(global::DareFightingICE.Grpc.Proto.ParticipateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Participate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::DareFightingICE.Grpc.Proto.PlayerGameState> Participate(global::DareFightingICE.Grpc.Proto.ParticipateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_Participate, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Input(global::DareFightingICE.Grpc.Proto.PlayerInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Input(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Input(global::DareFightingICE.Grpc.Proto.PlayerInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Input, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> InputAsync(global::DareFightingICE.Grpc.Proto.PlayerInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InputAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> InputAsync(global::DareFightingICE.Grpc.Proto.PlayerInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Input, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_RunGame, serviceImpl.RunGame)
          .AddMethod(__Method_Spectate, serviceImpl.Spectate)
          .AddMethod(__Method_Initialize, serviceImpl.Initialize)
          .AddMethod(__Method_Participate, serviceImpl.Participate)
          .AddMethod(__Method_Input, serviceImpl.Input).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_RunGame, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DareFightingICE.Grpc.Proto.RunGameRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.RunGame));
      serviceBinder.AddMethod(__Method_Spectate, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::DareFightingICE.Grpc.Proto.SpectateRequest, global::DareFightingICE.Grpc.Proto.SpectatorGameState>(serviceImpl.Spectate));
      serviceBinder.AddMethod(__Method_Initialize, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DareFightingICE.Grpc.Proto.InitializeRequest, global::DareFightingICE.Grpc.Proto.InitializeResponse>(serviceImpl.Initialize));
      serviceBinder.AddMethod(__Method_Participate, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::DareFightingICE.Grpc.Proto.ParticipateRequest, global::DareFightingICE.Grpc.Proto.PlayerGameState>(serviceImpl.Participate));
      serviceBinder.AddMethod(__Method_Input, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DareFightingICE.Grpc.Proto.PlayerInput, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.Input));
    }

  }
}
#endregion
